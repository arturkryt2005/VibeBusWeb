@page "/Profile"

<Header />
<Footer />

<div class="flex-profile">
    @if (CurrentUser != null)
    {
        <div class="profile-data">

            <div class="data-left">
                <img class="profile-photo" src="../images/traveler.png" />

                <div class="buttons">
                    <div class="editdiv1">
                        <button @onclick="EditProfile" class="editbut">Редактировать</button>
                    </div>

                    <div class="editdiv2">
                        <button @onclick="Cancel" class="editbut">Выйти</button>
                    </div>
                </div>
            </div>

            <div class="data-right">
                <p class="nameee">Имя:</p>
                <h1 class="Name">@userService.CurrentUser.Name</h1>

                <p class="nameee">Фамилия: </p>
                <h1 class="SurName">@userService.CurrentUser.Surname</h1>

                <p class="nameee">Почта:</p>
                <h1 class="SurName">@userService.CurrentUser.Email</h1>

                <p class="nameee">Номер телефона:</p>
                <h1 class="SurName">@userService.CurrentUser.PhoneNumber</h1>
            </div>
        </div>

        <div class="profile-tours">
            <h2>Мои поездки</h2>



            @if (UserTrips != null && UserTrips.Any())
            {
                var pastTrips = UserTrips.Where(trip => trip.DestinationTime < DateTime.Now).OrderByDescending(trip => trip.DestinationTime).ToList();
                var futureTrips = UserTrips.Where(trip => trip.DestinationTime >= DateTime.Now).OrderBy(trip => trip.DestinationTime).ToList();

                if (pastTrips.Any())
                {
                    <ul>
                        @foreach (var trip in pastTrips)
                        {
                            var departureCity = dbContext.Cities.FirstOrDefault(c => c.Id == trip.DeparturePointId);
                            var destinationCity = dbContext.Cities.FirstOrDefault(c => c.Id == trip.DestinationPointId);

                            <li>
                                <div class="haveTrip">
                                @if (departureCity != null && destinationCity != null)
                                {

                                    @if (trip.DepartureTime != null)
                                    {
                                        
                                            <span class="spanCities">@departureCity.Name - @destinationCity.Name</span>

                                            <p class="havep">Дата отправления: @trip.DepartureTime.ToString("dd.MM.yyyy")</p>
                                            <p class="havep">Дата прибытия: @trip.DestinationTime.ToString("dd.MM.yyyy")</p>
                                        
                                    }
                                    else
                                    {
                                        <p>Информация о маршруте не доступна.</p>
                                    }
                                }
                                else
                                {
                                    <p>Информация о городах не доступна.</p>
                                }
                                </div>
                            </li>
                        }
                    </ul>
                }

                if (futureTrips.Any())
                {
                    <h3 class="h3poezdok">Будущие:</h3>
                    <ul>
                        @foreach (var trip in futureTrips)
                        {
                            var departureCity = dbContext.Cities.FirstOrDefault(c => c.Id == trip.DeparturePointId);
                            var destinationCity = dbContext.Cities.FirstOrDefault(c => c.Id == trip.DestinationPointId);

                            <li>
                                @if (departureCity != null && destinationCity != null)
                                {
                                    <span class="spanCities">@departureCity.Name - @destinationCity.Name</span>
                                    @if (trip.DepartureTime != null)
                                    {
                                        <p>Дата отправления: @trip.DepartureTime.ToString("dd.MM.yyyy")</p>
                                        <p>Дата прибытия: @trip.DestinationTime.ToString("dd.MM.yyyy")</p>
                                    }
                                    else
                                    {
                                        <p>Информация о маршруте не доступна.</p>
                                    }
                                }
                                else
                                {
                                    <p>Информация о городах не доступна.</p>
                                }
                            </li>
                        }
                    </ul>
                }
            }
            else
            {
                <p class="NotTrips">У вас ещё нет поездок.</p>
            }
        </div>
    }
</div>

@code {
    [Inject]

    private NavigationManager NavigationManager { get; set; } = null!;

    private Users CurrentUser { get; set; } = null!;

    private List<Routes> UserTrips { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        CurrentUser = userService.CurrentUser;
        if (CurrentUser != null)
        {
            UserTrips = await userService.GetUserTripsAsync(CurrentUser.Id.ToString());
        }
    }


    private void EditProfile()
    {
        NavigationManager.NavigateTo("/EditPage");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/");
    }
}
